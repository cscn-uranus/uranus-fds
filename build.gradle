buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
        dependencyManagementPluginVersion = '1.0.4.RELEASE'
        quartzVersion = '2.2.1'
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/central/' }
        mavenLocal()
        mavenCentral()
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    baseName = 'uranus-fds-fie'
    version =  '0.0.1'
}

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/central/' }
    mavenLocal()
    mavenCentral()
    maven { url 'http://repo.spring.io/plugins-release' }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile 'com.google.guava:guava:25.0-jre'

    compile("org.springframework.boot:spring-boot-starter-web")

    compile 'org.springframework.integration:spring-integration-core:5.0.5.RELEASE'
    compile 'org.springframework.integration:spring-integration-ip:5.0.5.RELEASE'

    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'

    compile "org.quartz-scheduler:quartz:${quartzVersion}"
    compile "org.quartz-scheduler:quartz-jobs:${quartzVersion}"

    testCompile('org.springframework.boot:spring-boot-starter-test')
}




